(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{690:function(t,s,a){"use strict";a.r(s);var n=a(70),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-题目"}},[t._v("#")]),t._v(" 1. 题目")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://xerrors.oss-cn-shanghai.aliyuncs.com/imgs/20200626120712.png",alt:""}})]),t._v(" "),a("p",[t._v("题目链接："),a("a",{attrs:{href:"https://leetcode-cn.com/problems/bracket-lcci/submissions/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://leetcode-cn.com/problems/bracket-lcci/submissions/"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"_2-分析思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-分析思路"}},[t._v("#")]),t._v(" 2. 分析思路")]),t._v(" "),a("p",[t._v("第一部分是自己的分析思路，后一部分是参考资料之后的完善的思路，记录自己的思考过程的同时记录优秀的解法，把这个题目弄明白")]),t._v(" "),a("h3",{attrs:{id:"思考过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思考过程"}},[t._v("#")]),t._v(" 思考过程")]),t._v(" "),a("p",[t._v("总感觉似曾相识，这不就是 123 三个数依次入栈，共有多少种出栈可能性嘛！也被称之为"),a("a",{attrs:{href:"https://baike.baidu.com/item/%E5%8D%A1%E7%89%B9%E5%85%B0%E6%95%B0",target:"_blank",rel:"noopener noreferrer"}},[t._v("卡特兰数"),a("OutboundLink")],1),t._v("，所以我的算法就是模拟栈的输入以及输出，入栈的时候输出 "),a("code",[t._v("(")]),t._v("， 出栈的时候输出 "),a("code",[t._v(")")]),t._v("。这样就能达到输出最终序列的目的：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://xerrors.oss-cn-shanghai.aliyuncs.com/imgs/20200626123359.png",alt:"示意图"}})]),t._v(" "),a("h3",{attrs:{id:"完善解法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完善解法"}},[t._v("#")]),t._v(" 完善解法")]),t._v(" "),a("p",[t._v("我看题解中很多大佬的解法是 DFS 回溯法，感觉很好，不过我觉得我的这个解法还是更加好理解的，所以就不进行修改了。")]),t._v(" "),a("h3",{attrs:{id:"代码及结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码及结果"}},[t._v("#")]),t._v(" 代码及结果")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generateParenthesis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("recursive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    recursive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        recursive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n")])])]),a("p",[a("img",{attrs:{src:"https://xerrors.oss-cn-shanghai.aliyuncs.com/imgs/20200626120522.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("p",[t._v("[1] "),a("a",{attrs:{href:"https://baike.baidu.com/item/%E5%8D%A1%E7%89%B9%E5%85%B0%E6%95%B0",target:"_blank",rel:"noopener noreferrer"}},[t._v("卡特兰数 - 百度百科"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);