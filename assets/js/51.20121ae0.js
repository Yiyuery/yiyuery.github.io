(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{686:function(t,s,a){"use strict";a.r(s);var n=a(70),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-题目"}},[t._v("#")]),t._v(" 1. 题目")]),t._v(" "),a("p",[t._v("给定数组 A，我们可以对其进行煎饼翻转：我们选择一些正整数 k <= A.length，然后反转 A 的前 k 个元素的顺序。我们要执行零次或多次煎饼翻转（按顺序一次接一次地进行）以完成对数组 A 的排序。")]),t._v(" "),a("p",[t._v("返回能使 A 排序的煎饼翻转操作所对应的 k 值序列。任何将数组排序且翻转次数在 10 * A.length 范围内的有效答案都将被判断为正确。")]),t._v(" "),a("p",[t._v("题目链接："),a("a",{attrs:{href:"https://leetcode-cn.com/problems/pancake-sorting",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣（LeetCode）"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"_2-解题思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-解题思路"}},[t._v("#")]),t._v(" 2. 解题思路")]),t._v(" "),a("p",[t._v("解题思路分两部分，一种是自己拿到题目之后的想法，并不一定是正确的，主要是记录自己的心路历程以及思考过程。")]),t._v(" "),a("h3",{attrs:{id:"分析思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析思路"}},[t._v("#")]),t._v(" 分析思路")]),t._v(" "),a("p",[t._v("从目前的情况来看，很像是八数码的问题。首先使用动态规划来分析（吃一堑长一智），当前序列并不能转化为子序列来求解，因为序列的最优解并不包含子序列的最优解。Pass！")]),t._v(" "),a("p",[t._v("根据题目中的说明，任何将数组排序且翻转次数在 10 * A.length 范围内的有效答案都将被判断为正确。也就是不一定要是最优解，那么可以采用启发式搜索的办法。这里采用怎样一个启发函数呢？这里可以采用前后两个数相差为 1 的个数。")]),t._v(" "),a("p",[t._v("分析了一下时间复杂度，太高！Pass")]),t._v(" "),a("h3",{attrs:{id:"官方思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官方思路"}},[t._v("#")]),t._v(" 官方思路")]),t._v(" "),a("p",[t._v("我还是太菜了，居然又把思路弄错了。正确的思路是把依次把最大的找到然后翻转到最后面，依次进行就可以了。注意反转的时候并不是进行两次逆序；注意看 32541，这五个元素，经过翻转之后变成 52341、14325，也就是相当于把5直接放到最后面，5 之前的顺序不发生改变，5 之后的逆序放在最前面。")]),t._v(" "),a("p",[t._v("不过仔细琢磨琢磨这一题的话，你会发现这一题使用这种办法似乎没什么实际意义，因为花费的时间复杂度要 O(n2)，从实际执行情况来看，时间复杂度比选择排序还要高，如果使用这种办法来解决排序问题的话，真的是没有意义。")]),t._v(" "),a("p",[t._v("换个角度，如果说是找到最少次数的翻转的话，似乎可能会有一些实际应用的意义。")]),t._v(" "),a("h3",{attrs:{id:"代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pancakeSort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            ind "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            A "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ind"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n")])])]),a("p",[a("img",{attrs:{src:"https://xerrors.oss-cn-shanghai.aliyuncs.com/imgs/20200622124821.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("p",[t._v("[1] "),a("a",{attrs:{href:"https://leetcode-cn.com/problems/pancake-sorting/solution/jian-bing-pai-xu-by-leetcode/",target:"_blank",rel:"noopener noreferrer"}},[t._v("煎饼排序 - 力扣官方题解"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);