(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{518:function(t,s,n){"use strict";var a=n(281),e=n(280),r=n(13),_=n(35),o=n(522),p=n(282),c=n(25),u=n(283),l=n(110),i=n(2),v=[].push,k=Math.min,d=!i((function(){return!RegExp(4294967295,"y")}));a("split",2,(function(t,s,n){var a;return a="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(t,n){var a=String(_(this)),r=void 0===n?4294967295:n>>>0;if(0===r)return[];if(void 0===t)return[a];if(!e(t))return s.call(a,t,r);for(var o,p,c,u=[],i=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),k=0,d=new RegExp(t.source,i+"g");(o=l.call(d,a))&&!((p=d.lastIndex)>k&&(u.push(a.slice(k,o.index)),o.length>1&&o.index<a.length&&v.apply(u,o.slice(1)),c=o[0].length,k=p,u.length>=r));)d.lastIndex===o.index&&d.lastIndex++;return k===a.length?!c&&d.test("")||u.push(""):u.push(a.slice(k)),u.length>r?u.slice(0,r):u}:"0".split(void 0,0).length?function(t,n){return void 0===t&&0===n?[]:s.call(this,t,n)}:s,[function(s,n){var e=_(this),r=null==s?void 0:s[t];return void 0!==r?r.call(s,e,n):a.call(String(e),s,n)},function(t,e){var _=n(a,t,this,e,a!==s);if(_.done)return _.value;var l=r(t),i=String(this),v=o(l,RegExp),h=l.unicode,f=(l.ignoreCase?"i":"")+(l.multiline?"m":"")+(l.unicode?"u":"")+(d?"y":"g"),m=new v(d?l:"^(?:"+l.source+")",f),y=void 0===e?4294967295:e>>>0;if(0===y)return[];if(0===i.length)return null===u(m,i)?[i]:[];for(var g=0,w=0,E=[];w<i.length;){m.lastIndex=d?w:0;var b,O=u(m,d?i:i.slice(w));if(null===O||(b=k(c(m.lastIndex+(d?0:w)),i.length))===g)w=p(i,w,h);else{if(E.push(i.slice(g,w)),E.length===y)return E;for(var M=1;M<=O.length-1;M++)if(E.push(O[M]),E.length===y)return E;w=g=b}}return E.push(i.slice(g)),E}]}),!d)},522:function(t,s,n){var a=n(13),e=n(72),r=n(3)("species");t.exports=function(t,s){var n,_=a(t).constructor;return void 0===_||null==(n=a(_)[r])?s:e(n)}},524:function(t,s,n){var a=n(1),e=n(525),r=n(167);a({target:"Array",proto:!0},{fill:e}),r("fill")},525:function(t,s,n){"use strict";var a=n(16),e=n(165),r=n(25);t.exports=function(t){for(var s=a(this),n=r(s.length),_=arguments.length,o=e(_>1?arguments[1]:void 0,n),p=_>2?arguments[2]:void 0,c=void 0===p?n:e(p,n);c>o;)s[o++]=t;return s}},526:function(t,s,n){"use strict";n.d(s,"a",(function(){return e}));n(73),n(75),n(111),n(166),n(10),n(37),n(50);var a=n(81);function e(t,s){var n;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(n=Object(a.a)(t))||s&&t&&"number"==typeof t.length){n&&(t=n);var e=0,r=function(){};return{s:r,n:function(){return e>=t.length?{done:!0}:{done:!1,value:t[e++]}},e:function(t){throw t},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var _,o=!0,p=!1;return{s:function(){n=t[Symbol.iterator]()},n:function(){var t=n.next();return o=t.done,t},e:function(t){p=!0,_=t},f:function(){try{o||null==n.return||n.return()}finally{if(p)throw _}}}}},527:function(t,s,n){"use strict";var a=n(1),e=n(165),r=n(76),_=n(25),o=n(16),p=n(169),c=n(78),u=n(77),l=n(17),i=u("splice"),v=l("splice",{ACCESSORS:!0,0:0,1:2}),k=Math.max,d=Math.min;a({target:"Array",proto:!0,forced:!i||!v},{splice:function(t,s){var n,a,u,l,i,v,h=o(this),f=_(h.length),m=e(t,f),y=arguments.length;if(0===y?n=a=0:1===y?(n=0,a=f-m):(n=y-2,a=d(k(r(s),0),f-m)),f+n-a>9007199254740991)throw TypeError("Maximum allowed length exceeded");for(u=p(h,a),l=0;l<a;l++)(i=m+l)in h&&c(u,l,h[i]);if(u.length=a,n<a){for(l=m;l<f-a;l++)v=l+n,(i=l+a)in h?h[v]=h[i]:delete h[v];for(l=f;l>f-a+n;l--)delete h[l-1]}else if(n>a)for(l=f-a;l>m;l--)v=l+n-1,(i=l+a-1)in h?h[v]=h[i]:delete h[v];for(l=0;l<n;l++)h[l+m]=arguments[l+2];return h.length=f-a+n,u}})},550:function(module,__webpack_exports__,__webpack_require__){"use strict";var core_js_modules_es_array_fill__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(524),core_js_modules_es_array_fill__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(core_js_modules_es_array_fill__WEBPACK_IMPORTED_MODULE_0__),core_js_modules_es_array_includes__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(286),core_js_modules_es_array_includes__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(core_js_modules_es_array_includes__WEBPACK_IMPORTED_MODULE_1__),core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(279),core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_2__),core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(107),core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_3__),core_js_modules_es_array_reduce__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(290),core_js_modules_es_array_reduce__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(core_js_modules_es_array_reduce__WEBPACK_IMPORTED_MODULE_4__),core_js_modules_es_array_slice__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(74),core_js_modules_es_array_slice__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(core_js_modules_es_array_slice__WEBPACK_IMPORTED_MODULE_5__),core_js_modules_es_array_splice__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(527),core_js_modules_es_array_splice__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(core_js_modules_es_array_splice__WEBPACK_IMPORTED_MODULE_6__),core_js_modules_es_regexp_exec__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(71),core_js_modules_es_regexp_exec__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(core_js_modules_es_regexp_exec__WEBPACK_IMPORTED_MODULE_7__),core_js_modules_es_string_includes__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(287),core_js_modules_es_string_includes__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(core_js_modules_es_string_includes__WEBPACK_IMPORTED_MODULE_8__),core_js_modules_es_string_split__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(518),core_js_modules_es_string_split__WEBPACK_IMPORTED_MODULE_9___default=__webpack_require__.n(core_js_modules_es_string_split__WEBPACK_IMPORTED_MODULE_9__),_Users_xiazhaoyang_Ashe_workspace_dsb_reference_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(68),_Users_xiazhaoyang_Ashe_workspace_dsb_reference_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(526);__webpack_exports__.a={data:function(){return{features:["有毛","产奶","有羽毛","会飞","会下蛋","吃肉","有犬齿","有爪","眼睛盯前方","有蹄","反刍","黄褐色","有斑点","有黑色条纹","长脖","长腿","不会飞","会游泳","黑白两色","善飞","哺乳类","鸟类","肉食类","蹄类","企鹅","海燕","鸵鸟","斑马","长颈鹿","虎","金钱豹"],result:[],new_rule:"",rules:[{conditions:[0],conclusion:20},{conditions:[1],conclusion:20},{conditions:[2],conclusion:21},{conditions:[3,4],conclusion:21},{conditions:[20,5],conclusion:22},{conditions:[6,7,8],conclusion:22},{conditions:[20,8],conclusion:23},{conditions:[20,9],conclusion:23},{conditions:[21,17,18,16],conclusion:24},{conditions:[21,19],conclusion:25},{conditions:[21,14,15,16],conclusion:26},{conditions:[23,13],conclusion:27},{conditions:[23,14,15,12],conclusion:28},{conditions:[22,11,13],conclusion:29},{conditions:[22,11,12],conclusion:30}],process:[]}},methods:{init:function(){this.result=Array(this.features.length).fill(!1),this.new_rule=""},activate:function(t){var s=this;this.result[t]=!0;var n=function(t,n){return t&&s.result[n]},a=function(t,n){return t+s.features[n]+"且"};this.process=[];var e,r=Object(_Users_xiazhaoyang_Ashe_workspace_dsb_reference_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_11__.a)(this.rules);try{for(r.s();!(e=r.n()).done;){var _=e.value;if(_.conditions.reduce(n,!0)){var o=_.conditions.reduce(a,"因为").slice(0,-1);this.process.push(o+", 所以可得"+this.features[_.conclusion]),this.result[_.conclusion]=_.conditions.reduce(n,!0)}}}catch(t){r.e(t)}finally{r.f()}console.log(this.result)},addConcept:function(){var t=this;this.$prompt("请输入名称（1-5字）","提示",{confirmButtonText:"确定",cancelButtonText:"取消"}).then((function(s){var n=s.value;n&&n.length>0&&n.length<=5?t.features.push(n):t.$message.error("输入长度有误")}))},addNewRule:function addNewRule(){var pattern=/^[0-9]+(,[0-9]*)*>[0-9]+$/;if(pattern.test(this.new_rule)){var div=this.new_rule.indexOf(">"),conclusion=eval(this.new_rule.slice(div+1)),conditions=this.new_rule.slice(0,div).split(",").map((function(item){return eval(item)}));if(conclusion>=this.features.length||Math.max.apply(Math,Object(_Users_xiazhaoyang_Ashe_workspace_dsb_reference_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__.a)(conditions))>=this.features.length)return this.$message.error("超出范围");var new_rule={conditions:conditions,conclusion:conclusion};this.rules=this.insertRule(new_rule,this.rules),this.init(),this.$message("添加成功")}else this.$message.error("格式有误")},sortRules:function(){var t,s=[],n=Object(_Users_xiazhaoyang_Ashe_workspace_dsb_reference_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_11__.a)(this.rules);try{for(n.s();!(t=n.n()).done;){var a=t.value;s=this.insertRule(a,s)}}catch(t){n.e(t)}finally{n.f()}return console.log(s),s},insertRule:function(t,s){if(s&&0===s.length)return s.push(t),s;for(var n=s.length,a=0;a<n;a++)if(s[a].conditions.includes(t.conclusion)){console.log("yes",a),s.splice(a,0,t);break}return s.length===n&&s.push(t),s},computeClass:function(t){return this.result[t]?"active":"inactive"}},mounted:function(){this.init()}}},551:function(t,s,n){},610:function(t,s,n){"use strict";var a=n(551);n.n(a).a},652:function(t,s,n){"use strict";n.r(s);var a=n(550).a,e=(n(610),n(70)),r=Object(e.a)(a,(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[[n("div",[n("h2",[t._v("概念")]),t._v(" "),n("div",{staticClass:"item-box"},[t._l(t.features,(function(s,a){return n("div",{key:a,class:t.computeClass(a),on:{click:function(s){return t.activate(a)}}},[t._v(" "+t._s(s)),n("br"),t._v("( "+t._s(a)+" )\n            ")])})),t._v(" "),n("div",{staticClass:"inactive",on:{click:t.addConcept}},[t._v("添加"),n("br"),t._v("概念")])],2),t._v(" "),n("el-input",{staticStyle:{width:"90%",padding:"10px"},attrs:{placeholder:"1,3>10"},model:{value:t.new_rule,callback:function(s){t.new_rule=s},expression:"new_rule"}},[n("el-button",{attrs:{slot:"append"},on:{click:t.addNewRule},slot:"append"},[t._v("添加规则")])],1),t._v(" "),n("el-button",{staticStyle:{width:"90%",margin:"10px"},on:{click:t.init}},[t._v("重新选择")]),t._v(" "),n("h2",[t._v("过程")]),t._v(" "),t._l(t.process,(function(s){return n("p",{staticClass:"line"},[t._v(t._s(s)+" ")])}))],2)],t._v(" "),n("p",[n("a",{attrs:{href:"https://www.xerrors.fun/Animal-Identification-Expert-System/",target:"_blank",rel:"noopener noreferrer"}},[t._v("上一篇文章"),n("OutboundLink")],1),t._v(" 已经实现了「动物专家系统」的基本功能。其实已经是我的改进版本了，所以上一版的名称是 ExpertSystemPro，那么现在来了第三版，就叫 ExpertSystemProMax 吧！")]),t._v(" "),n("p",[t._v("在线可编辑演示地址，整个项目的源码也可以在 Codepen 里面看到：")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://codepen.io/xerrors/pen/RwWydzQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("ExpertSystem 中杯"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://codepen.io/xerrors/pen/abvGeqy",target:"_blank",rel:"noopener noreferrer"}},[t._v("ExpertSystemPro 大杯"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://codepen.io/xerrors/pen/oNjaaWG?editors=0010",target:"_blank",rel:"noopener noreferrer"}},[t._v("ExpertSystemProMax 超大杯"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("当然直接在我的个人博客网站里面就可以演示："),n("a",{attrs:{href:"https://www.xerrors.fun/blog/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.xerrors.fun/blog/"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("接下来考虑用户可以"),n("strong",[t._v("自行添加概念以及规则")]),t._v("的情况，前面我们已经了解到，想要正常的进行推理就必须要满足拓扑序列，否则就需要多次遍历才行。")]),t._v(" "),n("h2",{attrs:{id:"_1-添加新的规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-添加新的规则"}},[t._v("#")]),t._v(" 1. 添加新的规则")]),t._v(" "),n("p",[t._v("这里主要把实现的时候的难点说一下，即使读者可能不是使用 JavaScript 语言来写算法的，但是遇到的问题应该是一样的。对于如何实现插入新的规则应该有很多种做法，这里提供一个方法抛砖引玉；首先对用户的输入进行正则匹配，要求输入的格式为"),n("code",[t._v("1,3>10")]),t._v("，表示由事实 1 和 3 可以推导出事实 10 成立。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对输入进行正则匹配")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pattern "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^[0-9]+(,[0-9]*)*>[0-9]+$/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("new_rule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'格式有误'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("之后的工作就是字符串处理了，各个语言的处理逻辑差不多：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对输入的字符串进行分割处理 1,3>10 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" div "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("new_rule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'>'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" conclusion "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("new_rule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" conditions "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("new_rule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" div"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对数据可行性进行判断")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conclusion "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("features"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length \n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("conditions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("features"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'超出范围'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" new_rule "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        conditions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" conditions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        conclusion"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" conclusion\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插入一条新的规则")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rules "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertRule")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("new_rule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化 result 为空")]),t._v("\n")])])]),n("p",[t._v("这里的插入函数 "),n("code",[t._v("this.insertRule(rule, rulesArray)")]),t._v("会在后面的篇幅着重介绍。")]),t._v(" "),n("h2",{attrs:{id:"_2-对规则进行排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-对规则进行排序"}},[t._v("#")]),t._v(" 2. 对规则进行排序")]),t._v(" "),n("h3",{attrs:{id:"多次遍历是否可行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多次遍历是否可行"}},[t._v("#")]),t._v(" 多次遍历是否可行")]),t._v(" "),n("p",[t._v("两次遍历为什么不可以？第一次遍历出来「中间结果」，第二次遍历出来「最终结果」。理想是好的，但是中间结果并不一定只有一层，一层中间结果可以使用两次遍历来解决，那么两层中间结果呢？")]),t._v(" "),n("p",[t._v("比如下面这个例子，总共有 7 个「概念（事实）」，5 条「规则」，R1 - R5 按照从前到后的顺序排列，那么第一次遍历的时候，由于 R1、R2、R3 的条件都没有成立，只有 R4、R5 成立了，得到了推导结果  3 和 4；第二次顺序遍历的时候，由于 5 和 6 还没有被推导出来，所以 R1 依然不能成立，而由于 3 和 4 已经被推导出来，所以这次遍历之后 5 和 6 成立；那么当第三次遍历的时候，R1 才被推导出来。")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://xerrors.oss-cn-shanghai.aliyuncs.com/imgs/20200521000143.gif",alt:""}})]),t._v(" "),n("p",[t._v("这个例子说明，对于越复杂的规则程序要遍历的次数也就越多；而一般情况下我们难以估计遍历的次数，次数少了，不能保证「准确性」；次数多了搜索效率大大降低。所以我们应当对这个规则序列进行排序。")]),t._v(" "),n("h3",{attrs:{id:"拓扑排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#拓扑排序"}},[t._v("#")]),t._v(" 拓扑排序")]),t._v(" "),n("p",[t._v("这里插一些对「拓扑排序」的解释，给不了解或者有些遗忘的同学复习；如下图所示，我们有两个规则：")]),t._v(" "),n("ul",[n("li",[t._v("R1：长脖子，且是食草动物，可得长颈鹿")]),t._v(" "),n("li",[t._v("R2：吃草，且有蹄，可得食草动物")])]),t._v(" "),n("p",[t._v("可以看到，这里规则 R1 的一个条件「食草动物」是 R2 的结论，所以在使用规则 R1 判断是不是「长颈鹿」的时候，必须要先使用规则 R2来判断是不是「食草动物」。那么经过排序把 R2 应该放在 R1 前面，得到的序列就是拓扑序列了。")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://xerrors.oss-cn-shanghai.aliyuncs.com/imgs/20200521002332.png",alt:""}})]),t._v(" "),n("blockquote",[n("p",[t._v("我发现上一篇文章里面的手绘太丑了，我还是安安心心使用计算机画图吧！")])]),t._v(" "),n("p",[t._v("那么问题来了？怎么得到「拓扑序列」呢？第一反应就是「拓扑排序」。但是仔细斟酌一下，发现事情并没有那么简单；在数据结构中所学习到的拓扑排序的 「AOV 网（顶点表示活动的网络）」中，顶点都是活动，这些顶点根据前驱和后继关系得到一个网；")]),t._v(" "),n("p",[t._v("但是，在专家系统里面这些规则之间虽然存在前驱和后继关系，但是却没有直接的指针或者直接相连的数据结构（因为我们是使用数组来表示的），难以按照图的方式进行遍历；")]),t._v(" "),n("h3",{attrs:{id:"插入排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入排序"}},[t._v("#")]),t._v(" 插入排序")]),t._v(" "),n("p",[t._v("总而言之，在对这些规则实现「拓扑排序」的时候是相当的麻烦的；那么我们就可以转换一下思路了，即没法使用「拓扑排序」，有要得到「拓扑序列」，即想要马儿跑，又不想让马儿吃草；其实我们可以使用「插入排序」的思想。")]),t._v(" "),n("p",[t._v("当规则 A 的「结论」出现在规则 B 的「条件」中的时候，要把规则 A 放在规则 B 前面判断，其实也就是相当于 A「小于」B 咯，按照这个原理我们直接使用插入排序的思想对这个规则序列进行排序；")]),t._v(" "),n("p",[t._v("工作流程：首先创建一个空的数组，然后依次对每一条规则执行插入操作；每一个要插入的规则 A 要从头进行遍历比较，当遍历到某个位置的规则 B 不再满足 A「小于」B 的时候，就把规则 A 插入到当前位置，否则就插入到数组的最后位置。")]),t._v(" "),n("p",[t._v("看字可能不好理解，直接看代码（JavaScript），由于我们已经存在一个已知的拓扑序列，所以当添加规则的时候只需要执行一次插入操作就行；")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对规则进行插入排序")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sortRules")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rulesArray "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" item "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rulesArray "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertRule")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rulesArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rulesArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" rulesArray\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向已有的规则中插入一条新的规则")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertRule")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("rule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rulesArray")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rulesArray "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" rulesArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rulesArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" rulesArray\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" times "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rulesArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" times"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果该规则的推导结果会作为另外一个规则的条件的话，就放在那个规则的前面；")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否则放在最后一个；")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rulesArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conditions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conclusion"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        rulesArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rulesArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" times"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      rulesArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" rulesArray\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"_3-添加新的概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-添加新的概念"}},[t._v("#")]),t._v(" 3. 添加新的概念")]),t._v(" "),n("p",[t._v("这个难度很小：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConcept")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$prompt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'请输入名称（1-5字）'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提示'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        confirmButtonText"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'确定'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        cancelButtonText"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'取消'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("features"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'输入长度有误'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("最终效果：")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://xerrors.oss-cn-shanghai.aliyuncs.com/imgs/20200521012823.png",alt:""}})]),t._v(" "),n("h2",{attrs:{id:"_4-后续工作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-后续工作"}},[t._v("#")]),t._v(" 4. 后续工作")]),t._v(" "),n("p",[t._v("在上一版本的专家系统里面是可以通过两次点击一个属性来实现撤销选中的，但是在这一次的专家系统中给取消了，这是因为由于自定义规则的出现，使得规则变得复杂，所以需要花费很大的工作来完成这样一个撤销的功能；在综合了时间付出以及回报之后，我觉得这并不是一个值得去做的事情，也就没有去做。")]),t._v(" "),n("p",[t._v("这里我还是给想要完成的同学一些实现的思路")]),t._v(" "),n("p",[t._v("因为上一版本的专家系统中，我是把一般概念和推导出的概念分开进行计算的，但是当用户可以输入新的概念以及规则之后，没办法像上一版本一样把一般的概念给置为 0，然后计算。所以现在需要创建出来一个新的数据结构，对于 result 数组，定义如下的数据结构：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    status"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示有多少个规则可以推导出这个结论")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("所以当某个概念 I 置为 0 之后，需要遍历所有的规则，如果某个规则中包含这个概念 I ，且修改之前根据这个规则确实是可以推导出概念 O 的话，就把该概念 O 的结果的 count - 1，同时把这个被推导出来的概念 O 入队。遍历完成之后取出队首元素，继续执行遍历操作，直到队列为空。")]),t._v(" "),n("p",[t._v("看吧，工作还是很大的，所以我就直接加了一个重置选择的开关！")])],2)}),[],!1,null,"c730c506",null);s.default=r.exports}}]);