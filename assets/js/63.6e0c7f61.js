(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{698:function(a,t,s){"use strict";s.r(t);var r=s(70),n=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("Numpy 的广播机制")]),a._v(" "),s("p",[a._v("参考"),s("a",{attrs:{href:"https://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("scipy"),s("OutboundLink")],1)]),a._v(" "),s("h2",{attrs:{id:"什么是广播"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是广播"}},[a._v("#")]),a._v(" 什么是广播")]),a._v(" "),s("p",[a._v("Numpy 的两个数组或数组与其他数据进行算数运算的时候会调整数组的形状以适应运算，是 Numpy 的广播机制。")]),a._v(" "),s("p",[a._v("例如：")]),a._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.0")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" b\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("由于 Numpy 在进行运算的时候并没有进行实际上的内存拷贝（可以理解为并没有真正修改另外一个数组），所以进行广播运算的时候会节省内存。")]),a._v(" "),s("h2",{attrs:{id:"广播的规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#广播的规则"}},[a._v("#")]),a._v(" 广播的规则")]),a._v(" "),s("p",[a._v("Numpy会比较进行运算的两个数组，从最低维度开始向前比较，维度相兼容的条件是：")]),a._v(" "),s("ol",[s("li",[a._v("他们是相同的")]),a._v(" "),s("li",[a._v("他们其中一个是 1")])]),a._v(" "),s("p",[a._v("否则就会引起广播错误。运算后的结果数组的形状是参与运算的数组中每个维度的最大值。当然也可以不具备一样多的维度。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("A      (4d array):  8 x 1 x 6 x 1\nB      (3d array):      7 x 1 x 5\nResult (4d array):  8 x 7 x 6 x 5\n\nA      (2d array):  5 x 4\nB      (1d array):      1\nResult (2d array):  5 x 4\n\nA      (2d array):  5 x 4\nB      (1d array):      4\nResult (2d array):  5 x 4\n\nA      (3d array):  15 x 3 x 5\nB      (3d array):  15 x 1 x 5\nResult (3d array):  15 x 3 x 5\n\nA      (3d array):  15 x 3 x 5\nB      (2d array):       3 x 5\nResult (3d array):  15 x 3 x 5\n\nA      (3d array):  15 x 3 x 5\nB      (2d array):       3 x 1\nResult (3d array):  15 x 3 x 5\n")])])]),s("p",[a._v("下面这些数组没法进行广播：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("A      (1d array):  3\nB      (1d array):  4 # trailing dimensions do not match\n\nA      (2d array):      2 x 1\nB      (3d array):  8 x 4 x 3 # second from last dimensions mismatched\n")])])]),s("p",[a._v("更多示例参考文档："),s("a",{attrs:{href:"https://docs.scipy.org/doc/numpy/user/basics.broadcasting.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Scipy"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);